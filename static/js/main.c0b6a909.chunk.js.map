{"version":3,"sources":["logo.svg","iphone.png","Button.js","Output.js","Calculator.js","ChildComponent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Button","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","className","onClick","handleClick","val","React","Component","Output","out","Calculator","clear","bind","assertThisInitialized","equals","changeSign","percentage","numberHandle","concatInput","operation","state","output","firstOperand","secondOperand","waitingForOperand","reset","setState","currentOutput","newOutput","prevState","Number","parseFloat","newVal","toReturn","includes","isNaN","concat","console","log","result","toString","result2","result3","result4","toMultiply","negated","src_Output_0","src_Button_0","App","src_Calculator_0","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c0b6a909.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","module.exports = __webpack_public_path__ + \"static/media/iphone.6ae6785e.png\";","import React, { Component } from 'react';\nimport './Button.css'\nclass Button extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"Button\">\n\t\t\t\t<button onClick={() => this.props.handleClick(this.props.val)}>{this.props.val}</button> \n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Button\n","import React, {Component} from \"react\"\nimport './Output.css'\nclass Output extends Component {\n\tconstructor(props) {\n\t\tsuper(props)\n\t\t\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"Output\">\n\t\t\t\t<h1>{this.props.out}</h1>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Output","import React, { Component } from \"react\"\nimport './Calculator.css'\nimport Button from './Button'\nimport Output from './Output'\nimport ChildComponent from './ChildComponent'\nimport phone from './iphone.png'\nclass Calculator extends Component {\n\t\n\t\n\tconstructor(props) {\n\t\tsuper(props)\n\n\t\tthis.clear = this.clear.bind(this)\n\t\tthis.equals = this.equals.bind(this)\n\n\t\tthis.changeSign = this.changeSign.bind(this)\n\t\tthis.percentage = this.percentage.bind(this)\n\t\tthis.numberHandle = this.numberHandle.bind(this)\n\t\tthis.concatInput = this.concatInput.bind(this)\n\t\tthis.operation = this.operation.bind(this)\n\t\tthis.state = {output: \"0\", \n\t\t\t\t\t  firstOperand: 0, \n\t\t\t\t\t  secondOperand: 0, \n\t\t\t\t\t  waitingForOperand: false, \n\t\t\t\t\t  operation: \"\", \n\t\t\t\t\t  reset: true}\n\t\tthis.waitingForOperand = false\n\t}\n\n\tclear(val) {\n\t\tthis.setState({output: \"0\", reset: true})\n\t}\n\n\toperation(val) {\n\t\tthis.setState({output: val, operation: val, waitingForOperand: true})\n\t}\n\n\t\n\tnumberHandle(val) {\n\t\tvar currentOutput = this.state.output\n\t\tvar newOutput = this.concatInput(currentOutput, val)\n\t\tif (this.state.waitingForOperand) {\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {secondOperand: Number.parseFloat(newOutput)}\n\t\t\t})\n\n\t\t} else {\n\t\t\tthis.setState(prevState => {\n\t\t\t\treturn {firstOperand: Number.parseFloat(newOutput)}\n\t\t\t}, () => {\n\t\t\t})\n\t\t}\n\t}\n\n\n\t//TODO: Refactor this\n\tconcatInput(currentOutput, newVal) {\n\t\tvar toReturn = \"\"\n\t\t// Case of trying to add a second decimal point\n\t\tif (newVal === \".\" && currentOutput.includes(\".\")) {\n\t\t\ttoReturn = currentOutput\n\t\t}\n\t\t// If previous input is operation sign \n\t\telse if (isNaN(Number.parseFloat(currentOutput))) {\n\t\t\ttoReturn = newVal\n\t\t}\n\t\t// If leading zero / a reset is needed\n\t\telse if (this.state.reset && newVal != \".\") {\n\t\t\ttoReturn = newVal\n\t\t\tthis.setState({reset: false})\n\t\t} \n\t\telse { // All others\n\t\t\ttoReturn = this.state.output.concat(newVal)\n\t\t}\n\t\tthis.setState({output: toReturn})\n\t\treturn toReturn\n\t}\n\n\t/* Operations */\n\tequals(val) {\n\t\tconsole.log(\"First Operand: \", this.state.firstOperand, \", Second Operand: \", \n\t\t\t\t\tthis.state.secondOperand)\n\t\tthis.setState({waitingForOperand: false})\n\t\tswitch(this.state.operation) {\n\t\t\tcase \"+\": \n\t\t\t\tlet result = this.state.firstOperand + this.state.secondOperand\n\t\t\t\tthis.setState({output: result.toString(), firstOperand: result})\n\t\t\t\tbreak\n\t\t\tcase \"-\": \n\t\t\t\tlet result2 = this.state.firstOperand - this.state.secondOperand\n\t\t\t\tthis.setState({output: result2.toString(), firstOperand: result2})\n\t\t\t\tbreak\n\t\t\tcase \"x\": \n\t\t\t\tlet result3 = this.state.firstOperand * this.state.secondOperand\n\t\t\t\tthis.setState({output: result3.toString(), firstOperand: result3})\n\t\t\t\tbreak\n\t\t\tcase \"/\": \n\t\t\t\tlet result4 = this.state.firstOperand / this.state.secondOperand\n\t\t\t\tthis.setState({output: result4.toString(), firstOperand: result4})\n\t\t\t\tbreak\n\t\t}\n\t\tthis.setState({reset: true})\n\t}\n\n\tpercentage(val) {\n\t\tthis.setState({waitingForOperand: false})\n\t\tvar toMultiply = 1\n\t\tif (this.state.secondOperand != 0) {\n\t\t\ttoMultiply = this.state.secondOperand * 0.01\n\t\t}\n\t\tlet result = this.state.firstOperand * toMultiply\n\t\tthis.setState({output: result.toString(), firstOperand: result, reset: true})\n\t}\n\n\tchangeSign(val) {\n\t\tif (this.state.waitingForOperand) {\n\t\t\tvar negated = this.state.secondOperand\n\t\t\tnegated = -negated\n\t\t\tthis.setState({output: negated.toString(), secondOperand: negated})\n\t\t} else {\n\t\t\tvar negated = this.state.firstOperand\n\t\t\tnegated = -negated\n\t\t\tthis.setState({output: negated.toString(), firstOperand: negated})\n\t\t}\n\t}\n\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"Calculator\">\n\t\t\t\t<div className=\"innerElements\">\n\t\t\t\t\t<Output out={this.state.output}/>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<Button val=\"C\" handleClick={this.clear}/>\n\t\t\t\t\t\t<Button val=\"+/-\" handleClick={this.changeSign}/>\n\t\t\t\t\t\t<Button val=\"%\" handleClick={this.percentage}/>\n\t\t\t\t\t\t<Button val=\"/\" handleClick={this.operation}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<Button val=\"7\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"8\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"9\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"x\" handleClick={this.operation}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<Button val=\"4\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"5\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"6\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"-\" handleClick={this.operation}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<Button val=\"1\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"2\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"3\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"+\" handleClick={this.operation}/>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"row\">\n\t\t\t\t\t\t<Button val=\"0\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\".\" handleClick={this.numberHandle}/>\n\t\t\t\t\t\t<Button val=\"=\" handleClick={this.equals}/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t\n\t\t)\n\t}\n}\n\nexport default Calculator","import React, {Component} from \"react\"\n\nclass ChildComponent extends Component {\n\trender() {\n\t\treturn(\n\t\t\t<button onClick={() => this.props.trigger(\"Omg\")}>Click me!</button>\n\t\t)\n\t}\n\n}\n\nexport default ChildComponent","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Calculator from './Calculator'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}